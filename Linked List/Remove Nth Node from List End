PROBLEM - 


Given a linked list, remove the nth node from the end of list and return its head.

For example,
Given linked list: 1->2->3->4->5, and n = 2.
After removing the second node from the end, the linked list becomes 1->2->3->5.

    Note:

        If n is greater than the size of the list, remove the first node of the list.

Try doing it using constant additional space.


------ANSWER-------

ListNode* Solution::removeNthFromEnd(ListNode* A, int B) {
    ListNode* P = A, *Q = A, *prev = NULL;
    if(A==NULL||A->next == NULL)
        return NULL;
    for(int i=1;i<=B-1;i++)
        {if(P->next==NULL) 
            return A->next;
        P = P->next;}
    while(P->next!=NULL)
    {
        prev = Q;
        Q = Q->next;
        P = P->next;
    }
    if(prev==NULL)
        return A->next;
    else
        prev->next = Q->next;
        
    free(Q);
    return A;
}
